name: Update binary
on:
  push:
    tags:
    - 'b*'

defaults:
  run:
    shell: bash

jobs:
  build-stubs:
    name: Build stub binaries
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [ "3.9", "3.10", "3.11", "3.12", "3.13" ]
    steps:
    - name: Set Build Variables
      id: build-vars
      env:
        TAG_NAME: ${{ github.ref }}
      run: |
        export BUILD_NUMBER=$(basename $TAG_NAME)
        export PYTHON_TAG=$(python -c "print('.'.join('${{ matrix.python-version }}'.split('.')[:2]))")

        echo "PYTHON_TAG=${PYTHON_TAG}" | tee -a $GITHUB_ENV
        echo "BUILD_NUMBER=${BUILD_NUMBER}" | tee -a $GITHUB_ENV

    - name: Checkout Template
      uses: actions/checkout@v4.2.2

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5.4.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install git+https://github.com/beeware/briefcase.git

    - name: Generate VisualStudio Stub App
      run: |
        # Generate the stub app
        cd stub
        briefcase build windows visualstudio

        echo "Build ${{ env.PYTHON_TAG }}-${{ env.BUILD_NUMBER }} console stub artefact"
        mv "./build/console-stub/windows/visualstudio/x64/Release/console-stub.exe" ./Stub.exe
        7z a Console-Stub-${{ env.PYTHON_TAG }}-${{ env.BUILD_NUMBER }}.zip Stub.exe

        echo "Build ${{ env.PYTHON_TAG }}-${{ env.BUILD_NUMBER }} GUI stub artefact"
        mv "./build/gui-stub/windows/visualstudio/x64/Release/GUI Stub.exe" ./Stub.exe
        7z a GUI-Stub-${{ env.PYTHON_TAG }}-${{ env.BUILD_NUMBER }}.zip Stub.exe

        echo "Stub binaries:"
        ls -1 *.zip

    - name: Upload Release Asset to S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        python -m pip install -U pip
        python -m pip install -U setuptools
        python -m pip install awscli

        aws s3 cp stub/Console-Stub-${{ env.PYTHON_TAG }}-${{ env.BUILD_NUMBER }}.zip s3://briefcase-support/python/${{ env.PYTHON_TAG }}/windows/Console-Stub-${{ env.PYTHON_TAG }}-${{ env.BUILD_NUMBER }}.zip
        aws s3 cp stub/GUI-Stub-${{ env.PYTHON_TAG }}-${{ env.BUILD_NUMBER }}.zip s3://briefcase-support/python/${{ env.PYTHON_TAG }}/windows/GUI-Stub-${{ env.PYTHON_TAG }}-${{ env.BUILD_NUMBER }}.zip
